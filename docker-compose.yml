services:
  db:
    container_name: postgres
    image: postgres:15.4
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
  spring-boot-example:
    container_name: spring-boot-example
    image: josephwen/josephwen-api
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/customer"
    ports:
      - "8088:8080"
    networks:
      - db
    depends_on:
      - db
    restart: unless-stopped
  amigoscode-react:
    container_name: amigoscode-react
    image: josephwen/amigoscode-react
    build:
      context: frontend/react
      args:
        api_base_url: http://localhost:8080
    ports:
      - "3000:5173"
    depends_on:
      - spring-boot-example
    restart: unless-stopped

networks:
  db:
    driver: bridge

volumes:
  postgres: